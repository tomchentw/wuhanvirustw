import ChakraDefaultTheme from "@chakra-ui/theme";
import * as Chakra from "@chakra-ui/react";
import Head from "next/head";
import * as React from "react";
import useSWR from "swr";

function fetcherText(...args) {
  return fetch(...args).then((r) => r.text());
}

const theme = Chakra.extendTheme({
  fonts: {
    heading: `"Noto Sans TC", ${ChakraDefaultTheme.fonts.heading}`,
    body: `"Noto Sans TC", ${ChakraDefaultTheme.fonts.body}`,
  },
});

export default function WuhanvirustwApp({ Component, pageProps }) {
  const { data: buildId, error } = useSWR(`/BUILD_ID`, fetcherText, {
    refreshInterval: 1 * 60 * 60 * 1000, // Hourly
  });
  const prevBuildIdRef = React.useRef(buildId);
  const [newVersionAvailable, setNewVersionAvailable] = React.useState(false);
  React.useEffect(() => {
    if (buildId !== prevBuildIdRef.current && prevBuildIdRef.current) {
      setNewVersionAvailable(true);
    }
    prevBuildIdRef.current = buildId;
  }, [buildId, prevBuildIdRef]);
  return (
    <React.Fragment>
      <Head>
        <title>武漢肺炎資訊鏡像站</title>
        <meta name="description" content="Generated by 武漢肺炎資訊鏡像站" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />
        <link
          href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@100;300;500;700&display=swap"
          rel="stylesheet"
        />
      </Head>
      <Chakra.ChakraProvider theme={theme}>
        <Chakra.Collapse in={newVersionAvailable} animateOpacity>
          <Chakra.Box as="header" borderBottomWidth="2px" p={4}>
            <Chakra.Container maxW="container.xl" as={Chakra.HStack}>
              <Chakra.Text>發現新版本！</Chakra.Text>
              <Chakra.Button
                colorScheme="teal"
                size="sm"
                onClick={() => location.reload()}
              >
                重新整理
              </Chakra.Button>
            </Chakra.Container>
          </Chakra.Box>
        </Chakra.Collapse>
        <Component {...pageProps} />
      </Chakra.ChakraProvider>
    </React.Fragment>
  );
}
